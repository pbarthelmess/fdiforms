################################# Install mode #################################

# Install Linux instead of upgrade
install

# Graphical install mode with VNC
vnc

################################# Network setup ################################

# By default, use DHCP
network --bootproto=dhcp --device=eth0

################################# Repositories #################################

# Base URL of CentOS 6 repository, should be adapted regarding geographical location
url --url=http://ftp.heanet.ie/pub/centos/6/os/x86_64/

# CentOS updates repository
repo --name=updates --mirrorlist=http://mirrorlist.centos.org/?release=6&arch=x86_64&repo=updates

# Epel repository containing some ComodIT dependencies
repo --name=epel --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&arch=x86_64
repo --name="CentOS-Base-minimal"  --baseurl=file:///mnt/source
repo --name="CentOS-Base-full" --mirrorlist="http://mirrorlist.centos.org/?release=6&arch=x86_64&repo=os"
repo --name="CentOS-Updates" --mirrorlist="http://mirrorlist.centos.org/?release=6&arch=x86_64&repo=updates"
repo --name="CentOS-Extras" --mirrorlist="http://mirrorlist.centos.org/?release=6&arch=x86_64&repo=extras"
repo --name="RepoForge" --baseurl="http://www.mirrorservice.org/sites/apt.sw.be/redhat/el6/en/x86_64/rpmforge"
repo --name="ALF" --baseurl="http://build.liveforms.anoto.com/system-repo/"

########################## System configuration ################################

# Do not configure the X Window System
skipx

# Set system language
lang en_US

# Set keyboard layout
keyboard us

# Set time zone
timezone --utc America/Los_Angeles

# Set root password
rootpw --iscrypted $1$nRsAkzCe$R75MFWSa7Uqe/1GFRRDre1

# Request reboot after installation
reboot

# Do not run the Setup Agent on first boot
firstboot --disabled

# Firewall configuration
firewall --disabled

# SELinux configuration
selinux —disabled

# Configure the logging level
logging --level=info

# System authorization information
authconfig --enableshadow --passalgo=sha512

# Enable necessary services.
services --enabled="acpid,ntpd,sysstat”

############################# Disk partitioning ################################

# System bootloader configuration
bootloader --location=mbr

# Disk partitioning information
part / --onpart=/dev/xvde1
part swap --onpart=/dev/xvde2

############################### Packages #######################################

%packages

@Base
epel-release
cloud-init
openssh-server
openssh-clients
yum
at
sed
vixie-cron
crontabs
logrotate
ntpdate
which
wget
pdftk
unzip
sendmail
sendmail-cf
rpmforge-release
vim-enhanced
mailx
dpp
dpp-appserver
dpp-designtool
dpp-lang
dpp-lang-en_GB
dpp-lang-en_US
dpp-padsupport
dpp-portal
dpp-registry
curl-devel 
expat-devel 
gettext-devel 
openssl-devel 
zlib-devel 
gcc 
perl-ExtUtils-MakeMaker
php_mcrypt

######################### Pre-install script ##################################

%pre

REAL_DISK=/dev/xvde

# Clear the MBR and reset partition table
dd if=/dev/zero of=$REAL_DISK bs=512 count=1
parted -s $REAL_DISK mklabel msdos

TOTAL=`parted -s $REAL_DISK unit mb print free | grep $REAL_DISK | awk '{print $3}' | cut -d "M" -f1`

# Calculate swap partition start point
let SWAP_START=$TOTAL-512

# Create partitions
parted -s $REAL_DISK mkpart primary 0 $SWAP_START
parted -s $REAL_DISK mkpart primary $SWAP_START $TOTAL

######################### Post-install script ##################################

%post --log=/root/kickstart-post-log

# Create ec2-user user
/usr/sbin/useradd ec2-user
/bin/echo -e 'ec2-user\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers

# Configure cloud-init
cat <<EOF > /etc/cloud/cloud.cfg
user: ec2-user
disable_root: 0
ssh_pwauth: 1

cc_ready_cmd: ['/bin/true']
locale_configfile: /etc/sysconfig/i18n
mount_default_fields: [~, ~, 'auto', 'defaults,nofail', '0', '2']
ssh_deletekeys: 0
ssh_genkeytypes: ~
ssh_svcname: sshd
syslog_fix_perms: ~

cloud_init_modules:
- set_hostname
- rsyslog
- ssh

cloud_config_modules:
- mounts
- ssh-import-id
- locale
- set-passwords
- timezone
- disable-ec2-metadata

cloud_final_modules:
- keys-to-console
- phone-home
- final-message

# vim:syntax=yaml
EOF

#### ALF post install
<?php

header('Location: /liveforms');
PHP_01

mkdir /root/backups

cp /etc/motd /root/backups/motd

## CHANGE OR REMOVE THIS NOTICE AS APPROPRIATE
cat > /etc/motd << ISSUE_01
********************************************************************
*                                                                  *
* This system is for the use of authorized users only.  Usage of   *
* this system may be monitored and recorded by system personnel.   *
*                                                                  *
* Anyone using this system expressly consents to such monitoring   *
* and is advised that if such monitoring reveals possible          *
* evidence of criminal activity, system personnel may provide the  *
* evidence from such monitoring to law enforcement officials.      *
*                                                                  *
********************************************************************
ISSUE_01

cat >> /etc/rc3.d/S86configure << POST_01

## SET THE TIMEZONE AS APPROPRIATE - SKIPPING THIS WILL CAUSE ERRORS IF NOT SET
echo "
error_log = /tmp/php-errors
date.timezone = America/Los_Angeles
" >> /etc/php.ini

/sbin/chkconfig --levels 235 httpd on
/sbin/chkconfig --levels 235 mysqld on

cd /
wget http://build.liveforms.anoto.com/system/rebrand.tar.gz
tar xpvf rebrand.tar.gz

/etc/init.d/httpd start
/etc/init.d/mysqld start

/opt/dpp/postinstall

/usr/sbin/groupadd anoto
## PLEASE LEAVE THIS USER IN, IT WILL BE USED FOR THIRD-LINE TECHNICAL SUPPORT
/usr/sbin/useradd -g anoto -G apache -p '\$6\$jdPRe45bTQO5nIAx\$7UWsfQtQukdW4yRUsbv5hLr6bW8PnRbyLyNP5RTJj8tf.ED7zCzWSL6YB47mYSDzuVUQGuz3GCHjmJQsMzyaB/' -m anoto

/bin/echo -e ‘anoto\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers

cp /etc/ssh/sshd_config /root/backups/sshd_config

cat /root/backups/sshd_config |\
sed -e 's/^#Port 22/Port 22/g' \
    -e 's/^#Protocol 2,1/Protocol 2/g' \
    -e 's/^#ClientAliveInterval 0/ClientAliveInterval 300/g' \
    -e 's/^#PermitRootLogin yes/PermitRootLogin no/g' \
    -e 's/^#Banner \/some\/path/Banner \/etc\/motd/g' \
    -e 's/^#ClientAliveCountMax 3/ClientAliveCountMax 3/g' \
    -e 's/^#PermitEmptyPasswords no/PermitEmptyPasswords no/g' > /etc/ssh/sshd_config

echo "Ciphers aes256-ctr" >> /etc/ssh/sshd_config
/etc/init.d/sshd restart

cp /etc/login.defs /root/backups/login.defs
cat /root/backups/login.defs |\
sed -e 's/^PASS_MIN_LEN 5/PASS_MIN_LEN  7/g' > /etc/login.defs

yum update -y

cp /etc/pam.d/system-auth /root/backups/system-auth.bak
cat << EOF > /etc/pam.d/system-auth
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        required      pam_deny.so

account     required      pam_unix.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
account     required      pam_permit.so

password    requisite     pam_cracklib.so try_first_pass retry=3 minlen=8 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1 difok=3
password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok remember=10
password    required      pam_deny.so

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
EOF

rm -f /etc/rc3.d/S86configure
POST_01

chmod +x /etc/rc3.d/S86configure

